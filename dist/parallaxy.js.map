{"version":3,"file":"parallaxy.js","sources":["../src/core/parallaxy.ts","../src/utils.ts","../src/core/attr-handler.ts","../src/index.ts","../src/core/observer.ts"],"sourcesContent":["import Config from \"../types/config\";\r\nimport Rect from \"types/rect\";\r\nimport { getConfigFromAttributes } from \"./attr-handler\";\r\n\r\nconst ParallaxyElements: { element: HTMLElement; instance: Parallaxy }[] = [];\r\n\r\nconst ParallaxyDefaultconfig = {\r\n  speed: 0.3,\r\n  scale: 1.5,\r\n} as const;\r\n\r\nclass Parallaxy {\r\n  private frameId: number;\r\n\r\n  constructor(private element: HTMLElement, private config: Config = {}) {\r\n    if (!element)\r\n      throw \"[Parallaxy] 'element' must be specified when you create a new Parallaxy object\";\r\n\r\n    config = this.verfiyConfiguration(config);\r\n\r\n    element.style.willChange = \"transform\";\r\n\r\n    ParallaxyElements.push({ element, instance: this });\r\n\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Check the configuration and set the default config\r\n   * @param config\r\n   * @returns\r\n   */\r\n  private verfiyConfiguration(config: Config) {\r\n    if (!config.x && !config.y)\r\n      config.y = { speed: ParallaxyDefaultconfig.speed };\r\n\r\n    if (config.x && !config.x.speed)\r\n      config.x.speed = ParallaxyDefaultconfig.speed;\r\n    if (config.y && !config.y.speed)\r\n      config.y.speed = ParallaxyDefaultconfig.speed;\r\n\r\n    if (config.x && config.x.speed <= 0)\r\n      throw \"[Parallaxy] 'speed' need to be bigger than 0\";\r\n    if (config.y && config.y.speed <= 0)\r\n      throw \"[Parallaxy] 'speed' need to be bigger than 0\";\r\n    if (config.x && config.x.speed > 1)\r\n      throw \"[Parallaxy] 'speed' need to be smaller than 1\";\r\n    if (config.y && config.y.speed > 1)\r\n      throw \"[Parallaxy] 'speed' need to be smaller than 1\";\r\n\r\n    if (config.scale < 1)\r\n      throw \"[Parallaxy] 'scale' need to be bigger than 1 (or equal but with overflow)\";\r\n    if (!config.scale) config.scale = ParallaxyDefaultconfig.scale;\r\n\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Update the config on attribute change\r\n   * @param config\r\n   */\r\n  updateConfig(config: Config = {}) {\r\n    const newConfig = this.verfiyConfiguration(\r\n      config ?? getConfigFromAttributes(this.element)\r\n    );\r\n    this.config = newConfig;\r\n    this.stop();\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Check if the breaking point is matched\r\n   * @returns\r\n   */\r\n  private matchingBreakingPoint() {\r\n    const breakingPoint = this.config.breakPoint;\r\n\r\n    if (breakingPoint && window.matchMedia(breakingPoint).matches) {\r\n      this.stop();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Start the parallax\r\n   * @returns\r\n   */\r\n  start() {\r\n    if (this.matchingBreakingPoint()) return;\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * Stop the parallax\r\n   */\r\n  stop() {\r\n    window.cancelAnimationFrame(this.frameId);\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Reset the transformation on the parallax\r\n   */\r\n  reset() {\r\n    this.element.style.transform = \"\";\r\n  }\r\n\r\n  /**\r\n   * Update the position of the image for the parallax effect\r\n   * @returns\r\n   */\r\n  private updatePosition() {\r\n    if (!this.element.isConnected) {\r\n      this.stop();\r\n      return;\r\n    }\r\n\r\n    const scaledRect = this.element.getBoundingClientRect();\r\n\r\n    const transform = [];\r\n    transform.push(`scale(${this.config.scale})`);\r\n\r\n    let translation = { x: 0, y: 0 };\r\n    if (this.config.y) {\r\n      translation.y = this.translateY(scaledRect);\r\n    }\r\n    if (this.config.x) {\r\n      translation.x = this.translateX(scaledRect);\r\n    }\r\n\r\n    transform.push(`translate3d(${translation.x}px, ${translation.y}px, 0px)`);\r\n\r\n    this.element.style.transform = transform.join(\" \");\r\n    this.frameId = window.requestAnimationFrame(this.updatePosition.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Return the y translation in px\r\n   * @param scaledRect\r\n   * @returns\r\n   */\r\n  private translateY(scaledRect: Rect) {\r\n    const speed = this.config.y.speed;\r\n    const isInverted = this.config.y.inverted;\r\n\r\n    const elementCenterPosition = scaledRect.top + scaledRect.height / 2;\r\n    const elementPositionFromTop =\r\n      (this.config.axes ?? window.innerHeight / 2) - elementCenterPosition;\r\n\r\n    let translation = elementPositionFromTop * speed;\r\n    if (isInverted) translation = -translation;\r\n\r\n    //handle overflow\r\n    const additionalHeight =\r\n      (scaledRect.height - scaledRect.height / this.config.scale) / 2;\r\n    if (!this.config.y.overflow && Math.abs(translation) >= additionalHeight) {\r\n      translation = translation < 0 ? -additionalHeight : additionalHeight;\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  /**\r\n   * Return the x translation in px\r\n   * @param scaledRect\r\n   * @returns\r\n   */\r\n  private translateX(scaledRect: Rect) {\r\n    const speed = this.config.x.speed;\r\n    const isInverted = this.config.x.inverted;\r\n\r\n    const elementCenterPosition = scaledRect.top + scaledRect.height / 2;\r\n    const elementPositionFromTop =\r\n      (this.config.axes ?? window.innerHeight / 2) - elementCenterPosition;\r\n\r\n    let translation = elementPositionFromTop * speed;\r\n    if (isInverted) translation = -translation;\r\n\r\n    //handle overflow\r\n    const additionalWidth =\r\n      (scaledRect.width - scaledRect.width / this.config.scale) / 2;\r\n    if (!this.config.x.overflow && Math.abs(translation) >= additionalWidth) {\r\n      translation = translation < 0 ? -additionalWidth : additionalWidth;\r\n    }\r\n\r\n    return translation;\r\n  }\r\n}\r\n\r\nexport { Parallaxy, ParallaxyElements, ParallaxyDefaultconfig };\r\n","import { ParallaxyElements } from \"core/parallaxy\";\r\n\r\n/**\r\n * Parse boolean from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseBooleanAttribute(str: string): boolean {\r\n  return str !== null && str !== undefined && (str === \"\" || str === \"true\");\r\n}\r\n\r\n/**\r\n * Parse float from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseFloatAttributes(str: string): number {\r\n  const nb = parseFloat(str);\r\n  return isNaN(nb) || typeof nb !== \"number\" ? undefined : nb;\r\n}\r\n\r\n/**\r\n * Find a parallaxy element by the index\r\n * @param element\r\n * @returns\r\n */\r\nfunction findParallaxyElementIndex(element: HTMLElement | Node) {\r\n  return ParallaxyElements.findIndex((e) => e.element === element);\r\n}\r\n\r\nexport {\r\n  parseBooleanAttribute,\r\n  parseFloatAttributes,\r\n  findParallaxyElementIndex,\r\n};\r\n","import {\r\n  findParallaxyElementIndex,\r\n  parseBooleanAttribute,\r\n  parseFloatAttributes,\r\n} from \"utils\";\r\nimport { Parallaxy, ParallaxyDefaultconfig } from \"./parallaxy\";\r\nimport Config from \"types/config\";\r\n\r\nfunction getConfigFromAttributes(element: HTMLElement): Config {\r\n  const attr = element.dataset; //global config\r\n\r\n  const isOnX = attr.prlX !== undefined;\r\n  const isOnY = attr.prlY !== undefined;\r\n\r\n  const config: Config = {};\r\n\r\n  if (isOnX) {\r\n    config.x = {\r\n      speed:\r\n        parseFloatAttributes(attr.prlSpeedX) ?? ParallaxyDefaultconfig.speed,\r\n      inverted: parseBooleanAttribute(attr.prlInvertedX),\r\n      overflow: parseBooleanAttribute(attr.prlOverflowX),\r\n    };\r\n  }\r\n\r\n  if (isOnY) {\r\n    config.y = {\r\n      speed:\r\n        parseFloatAttributes(attr.prlSpeedY) ?? ParallaxyDefaultconfig.speed,\r\n      inverted: parseBooleanAttribute(attr.prlInvertedY),\r\n      overflow: parseBooleanAttribute(attr.prlOverflowY),\r\n    };\r\n  }\r\n\r\n  config.scale = parseFloatAttributes(attr.prlScale);\r\n\r\n  const breakPoint = attr.prlBreakpoint;\r\n  if (breakPoint !== undefined) config.breakPoint = breakPoint;\r\n\r\n  const axes = attr.prlAxes;\r\n  if (axes !== undefined) config.axes = parseFloatAttributes(axes);\r\n\r\n  return config;\r\n}\r\n\r\nfunction ParallaxyAttributesHandler(elementsParallaxy: HTMLElement[]) {\r\n  for (const element of elementsParallaxy) {\r\n    const alreadySetup = findParallaxyElementIndex(element) !== -1;\r\n    const isNotParallaxy =\r\n      element.dataset?.prlX === undefined &&\r\n      element.dataset?.prlY === undefined;\r\n\r\n    if (alreadySetup || isNotParallaxy) continue;\r\n\r\n    new Parallaxy(element, getConfigFromAttributes(element));\r\n  }\r\n}\r\n\r\nexport { ParallaxyAttributesHandler, getConfigFromAttributes };\r\n","import { ParallaxyAttributesHandler } from \"core/attr-handler\";\r\nimport ParallaxyObserver from \"core/observer\";\r\nimport { Parallaxy } from \"core/parallaxy\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  ParallaxyAttributesHandler(\r\n    Array.from(document.querySelectorAll(\"[data-prl-y], [data-prl-x]\"))\r\n  );\r\n  ParallaxyObserver();\r\n});\r\n\r\nexport default Parallaxy;\r\n","import { findParallaxyElementIndex, parseBooleanAttribute } from \"../utils\";\r\nimport { ParallaxyAttributesHandler } from \"./attr-handler\";\r\nimport { ParallaxyElements } from \"./parallaxy\";\r\n\r\nfunction ParallaxyObserver() {\r\n  const observerDOM = new MutationObserver(function (mutations) {\r\n    const addedNodes: HTMLElement[] = [];\r\n\r\n    for (const mutation of mutations ?? []) {\r\n      //attributes changed\r\n      if (\r\n        mutation.type === \"attributes\" &&\r\n        mutation.attributeName.includes(\"data-prl\")\r\n      ) {\r\n        const element = mutation.target as HTMLElement;\r\n        const cardIndex = findParallaxyElementIndex(element);\r\n\r\n        const isParallaxy =\r\n          parseBooleanAttribute(element.dataset?.prlX) ||\r\n          parseBooleanAttribute(element.dataset?.prlY);\r\n\r\n        if (isParallaxy && cardIndex === -1) {\r\n          addedNodes.push(element);\r\n        } else if (cardIndex !== -1) {\r\n          ParallaxyElements[cardIndex].instance.updateConfig();\r\n        }\r\n      }\r\n\r\n      //added nodes\r\n      for (const addedNode of mutation.addedNodes) {\r\n        addedNodes.push(addedNode as HTMLElement);\r\n      }\r\n\r\n      //removed nodes\r\n      for (const removedNode of mutation.removedNodes) {\r\n        const elementIndex = findParallaxyElementIndex(removedNode);\r\n        if (elementIndex !== -1) {\r\n          ParallaxyElements.splice(elementIndex, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (addedNodes.length > 0) ParallaxyAttributesHandler(addedNodes);\r\n  });\r\n\r\n  observerDOM.observe(window.document.documentElement, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n  });\r\n}\r\n\r\nexport default ParallaxyObserver;\r\n"],"names":["ParallaxyElements","ParallaxyDefaultconfig","speed","scale","Parallaxy","constructor","element","config","this","verfiyConfiguration","style","willChange","push","instance","start","x","y","updateConfig","newConfig","getConfigFromAttributes","stop","matchingBreakingPoint","breakingPoint","breakPoint","window","matchMedia","matches","updatePosition","cancelAnimationFrame","frameId","reset","transform","isConnected","scaledRect","getBoundingClientRect","translation","translateY","translateX","join","requestAnimationFrame","bind","isInverted","inverted","elementCenterPosition","top","height","axes","_a","innerHeight","additionalHeight","overflow","Math","abs","additionalWidth","width","parseBooleanAttribute","str","parseFloatAttributes","nb","parseFloat","isNaN","undefined","findParallaxyElementIndex","findIndex","e","attr","dataset","isOnX","prlX","isOnY","prlY","prlSpeedX","prlInvertedX","prlOverflowX","_b","prlSpeedY","prlInvertedY","prlOverflowY","prlScale","prlBreakpoint","prlAxes","ParallaxyAttributesHandler","elementsParallaxy","alreadySetup","isNotParallaxy","document","addEventListener","Array","from","querySelectorAll","MutationObserver","mutations","addedNodes","mutation","type","attributeName","includes","target","cardIndex","addedNode","removedNode","removedNodes","elementIndex","splice","length","observe","documentElement","childList","subtree","attributes"],"mappings":"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"}