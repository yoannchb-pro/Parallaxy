{"version":3,"file":"parallaxy.js","sources":["../src/core/parallaxy.ts","../src/utils.ts","../src/core/attr-handler.ts","../src/index.ts","../src/core/observer.ts"],"sourcesContent":["import Config from \"../types/config\";\r\nimport Rect from \"types/rect\";\r\n\r\nconst ParallaxyElements: { element: HTMLElement; instance: Parallaxy }[] = [];\r\n\r\nconst ParallaxyDefaultconfig = {\r\n  speed: 0.3,\r\n  scale: 1.5,\r\n} as const;\r\n\r\nclass Parallaxy {\r\n  private frameId: number;\r\n  private actualTranslation = { x: 0, y: 0 };\r\n  private actualScale = 1;\r\n\r\n  constructor(private element: HTMLElement, private config: Config = {}) {\r\n    if (!element)\r\n      throw \"[Parallaxy] 'element' must be specified when you create a new Parallaxy object\";\r\n\r\n    config = this.verfiyConfiguration(config);\r\n\r\n    element.style.willChange = \"transform\";\r\n\r\n    ParallaxyElements.push({ element, instance: this });\r\n\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Check the configuration and set the default config\r\n   * @param config\r\n   * @returns\r\n   */\r\n  private verfiyConfiguration(config: Config) {\r\n    if (!config.x && !config.y)\r\n      config.y = { speed: ParallaxyDefaultconfig.speed };\r\n\r\n    if (config.x && !config.x.speed)\r\n      config.x.speed = ParallaxyDefaultconfig.speed;\r\n    if (config.y && !config.y.speed)\r\n      config.y.speed = ParallaxyDefaultconfig.speed;\r\n\r\n    if (config.x && config.x.speed <= 0)\r\n      throw \"[Parallaxy] 'speed' need to be bigger than 0\";\r\n    if (config.y && config.y.speed <= 0)\r\n      throw \"[Parallaxy] 'speed' need to be bigger than 0\";\r\n    if (config.x && config.x.speed > 1)\r\n      throw \"[Parallaxy] 'speed' need to be smaller than 1\";\r\n    if (config.y && config.y.speed > 1)\r\n      throw \"[Parallaxy] 'speed' need to be smaller than 1\";\r\n\r\n    if (config.scale < 1)\r\n      throw \"[Parallaxy] 'scale' need to be bigger than 1 (or equal but with overflow)\";\r\n    if (!config.scale) config.scale = ParallaxyDefaultconfig.scale;\r\n\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Update the config on attribute change\r\n   * @param config\r\n   */\r\n  updateConfig(config: Config = {}) {\r\n    this.config = this.verfiyConfiguration(config);\r\n    this.stop();\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Check if the breaking point is matched\r\n   * @returns\r\n   */\r\n  private matchingBreakingPoint() {\r\n    const breakingPoint = this.config.breakPoint;\r\n\r\n    if (breakingPoint && window.matchMedia(breakingPoint).matches) {\r\n      this.stop();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Start the parallax\r\n   * @returns\r\n   */\r\n  start() {\r\n    if (this.matchingBreakingPoint()) return;\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * Stop the parallax\r\n   */\r\n  stop() {\r\n    window.cancelAnimationFrame(this.frameId);\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Reset the transformation on the parallax\r\n   */\r\n  reset() {\r\n    this.element.style.transform = \"\";\r\n  }\r\n\r\n  /**\r\n   * Update the position of the image for the parallax effect\r\n   * @returns\r\n   */\r\n  private updatePosition() {\r\n    if (!this.element.isConnected) {\r\n      this.stop();\r\n      return;\r\n    }\r\n\r\n    const scaledRect = this.element.getBoundingClientRect();\r\n\r\n    const transform = [];\r\n    transform.push(`scale(${this.config.scale})`);\r\n\r\n    let translation = { x: 0, y: 0 };\r\n    if (this.config.y) {\r\n      const transY = this.translateY(scaledRect);\r\n      translation.y = parseFloat(transY.toFixed(2));\r\n    }\r\n    if (this.config.x) {\r\n      const transX = this.translateX(scaledRect);\r\n      translation.x = parseFloat(transX.toFixed(2));\r\n    }\r\n\r\n    transform.push(`translate3d(${translation.x}px, ${translation.y}px, 0px)`);\r\n\r\n    if (\r\n      this.actualScale !== this.config.scale ||\r\n      this.actualTranslation.x !== translation.x ||\r\n      this.actualTranslation.y !== translation.y\r\n    ) {\r\n      this.element.style.transform = transform.join(\" \");\r\n\r\n      this.actualScale = this.config.scale;\r\n      this.actualTranslation.x = translation.x;\r\n      this.actualTranslation.y = translation.y;\r\n    }\r\n\r\n    this.frameId = window.requestAnimationFrame(this.updatePosition.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Return the y translation in px\r\n   * @param scaledRect\r\n   * @returns\r\n   */\r\n  private translateY(scaledRect: Rect) {\r\n    const speed = this.config.y.speed;\r\n    const isInverted = this.config.y.inverted;\r\n\r\n    const elementCenterPosition = scaledRect.top + scaledRect.height / 2;\r\n    const elementPositionFromTop =\r\n      (this.config.axes ?? window.innerHeight / 2) - elementCenterPosition;\r\n\r\n    let translation = elementPositionFromTop * speed;\r\n    if (isInverted) translation = -translation;\r\n\r\n    //handle overflow\r\n    const additionalHeight =\r\n      (scaledRect.height - scaledRect.height / this.config.scale) / 2;\r\n    if (!this.config.y.overflow && Math.abs(translation) >= additionalHeight) {\r\n      translation = translation < 0 ? -additionalHeight : additionalHeight;\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  /**\r\n   * Return the x translation in px\r\n   * @param scaledRect\r\n   * @returns\r\n   */\r\n  private translateX(scaledRect: Rect) {\r\n    const speed = this.config.x.speed;\r\n    const isInverted = this.config.x.inverted;\r\n\r\n    const elementCenterPosition = scaledRect.top + scaledRect.height / 2;\r\n    const elementPositionFromTop =\r\n      (this.config.axes ?? window.innerHeight / 2) - elementCenterPosition;\r\n\r\n    let translation = elementPositionFromTop * speed;\r\n    if (isInverted) translation = -translation;\r\n\r\n    //handle overflow\r\n    const additionalWidth =\r\n      (scaledRect.width - scaledRect.width / this.config.scale) / 2;\r\n    if (!this.config.x.overflow && Math.abs(translation) >= additionalWidth) {\r\n      translation = translation < 0 ? -additionalWidth : additionalWidth;\r\n    }\r\n\r\n    return translation;\r\n  }\r\n}\r\n\r\nexport { Parallaxy, ParallaxyElements, ParallaxyDefaultconfig };\r\n","import { ParallaxyElements } from \"core/parallaxy\";\r\n\r\n/**\r\n * Parse boolean from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseBooleanAttribute(str: string): boolean {\r\n  return str !== null && str !== undefined && (str === \"\" || str === \"true\");\r\n}\r\n\r\n/**\r\n * Parse float from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseFloatAttributes(str: string): number {\r\n  const nb = parseFloat(str);\r\n  return isNaN(nb) || typeof nb !== \"number\" ? undefined : nb;\r\n}\r\n\r\n/**\r\n * Find a parallaxy element by the index\r\n * @param element\r\n * @returns\r\n */\r\nfunction findParallaxyElementIndex(element: HTMLElement | Node) {\r\n  return ParallaxyElements.findIndex((e) => e.element === element);\r\n}\r\n\r\nexport {\r\n  parseBooleanAttribute,\r\n  parseFloatAttributes,\r\n  findParallaxyElementIndex,\r\n};\r\n","import {\r\n  findParallaxyElementIndex,\r\n  parseBooleanAttribute,\r\n  parseFloatAttributes,\r\n} from \"utils\";\r\nimport { Parallaxy, ParallaxyDefaultconfig } from \"./parallaxy\";\r\nimport Config from \"types/config\";\r\n\r\nfunction getConfigFromAttributes(element: HTMLElement): Config {\r\n  const attr = element.dataset; //global config\r\n\r\n  const isOnX = attr.prlX !== undefined;\r\n  const isOnY = attr.prlY !== undefined;\r\n\r\n  const config: Config = {};\r\n\r\n  if (isOnX) {\r\n    config.x = {\r\n      speed:\r\n        parseFloatAttributes(attr.prlSpeedX) ?? ParallaxyDefaultconfig.speed,\r\n      inverted: parseBooleanAttribute(attr.prlInvertedX),\r\n      overflow: parseBooleanAttribute(attr.prlOverflowX),\r\n    };\r\n  }\r\n\r\n  if (isOnY) {\r\n    config.y = {\r\n      speed:\r\n        parseFloatAttributes(attr.prlSpeedY) ?? ParallaxyDefaultconfig.speed,\r\n      inverted: parseBooleanAttribute(attr.prlInvertedY),\r\n      overflow: parseBooleanAttribute(attr.prlOverflowY),\r\n    };\r\n  }\r\n\r\n  config.scale = parseFloatAttributes(attr.prlScale);\r\n\r\n  const breakPoint = attr.prlBreakpoint;\r\n  if (breakPoint !== undefined) config.breakPoint = breakPoint;\r\n\r\n  const axes = attr.prlAxes;\r\n  if (axes !== undefined) config.axes = parseFloatAttributes(axes);\r\n\r\n  return config;\r\n}\r\n\r\nfunction ParallaxyAttributesHandler(elementsParallaxy: HTMLElement[]) {\r\n  for (const element of elementsParallaxy) {\r\n    const alreadySetup = findParallaxyElementIndex(element) !== -1;\r\n    const isNotParallaxy =\r\n      element.dataset?.prlX === undefined &&\r\n      element.dataset?.prlY === undefined;\r\n\r\n    if (alreadySetup || isNotParallaxy) continue;\r\n\r\n    new Parallaxy(element, getConfigFromAttributes(element));\r\n  }\r\n}\r\n\r\nexport { ParallaxyAttributesHandler, getConfigFromAttributes };\r\n","import { ParallaxyAttributesHandler } from \"core/attr-handler\";\r\nimport ParallaxyObserver from \"core/observer\";\r\nimport { Parallaxy } from \"core/parallaxy\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  ParallaxyAttributesHandler(\r\n    Array.from(document.querySelectorAll(\"[data-prl-y], [data-prl-x]\"))\r\n  );\r\n  ParallaxyObserver();\r\n});\r\n\r\nexport default Parallaxy;\r\n","import { findParallaxyElementIndex, parseBooleanAttribute } from \"../utils\";\r\nimport {\r\n  ParallaxyAttributesHandler,\r\n  getConfigFromAttributes,\r\n} from \"./attr-handler\";\r\nimport { ParallaxyElements } from \"./parallaxy\";\r\n\r\nfunction ParallaxyObserver() {\r\n  const observerDOM = new MutationObserver(function (mutations) {\r\n    const addedNodes: HTMLElement[] = [];\r\n\r\n    for (const mutation of mutations ?? []) {\r\n      //attributes changed\r\n      if (\r\n        mutation.type === \"attributes\" &&\r\n        mutation.attributeName.includes(\"data-prl\")\r\n      ) {\r\n        const element = mutation.target as HTMLElement;\r\n        const cardIndex = findParallaxyElementIndex(element);\r\n\r\n        const isParallaxy =\r\n          parseBooleanAttribute(element.dataset?.prlX) ||\r\n          parseBooleanAttribute(element.dataset?.prlY);\r\n\r\n        if (isParallaxy && cardIndex === -1) {\r\n          addedNodes.push(element);\r\n        } else if (cardIndex !== -1) {\r\n          ParallaxyElements[cardIndex].instance.updateConfig(\r\n            getConfigFromAttributes(ParallaxyElements[cardIndex].element)\r\n          );\r\n        }\r\n      }\r\n\r\n      //added nodes\r\n      for (const addedNode of mutation.addedNodes) {\r\n        addedNodes.push(addedNode as HTMLElement);\r\n      }\r\n\r\n      //removed nodes\r\n      for (const removedNode of mutation.removedNodes) {\r\n        const elementIndex = findParallaxyElementIndex(removedNode);\r\n        if (elementIndex !== -1) {\r\n          ParallaxyElements.splice(elementIndex, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (addedNodes.length > 0) ParallaxyAttributesHandler(addedNodes);\r\n  });\r\n\r\n  observerDOM.observe(window.document.documentElement, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n  });\r\n}\r\n\r\nexport default ParallaxyObserver;\r\n"],"names":["ParallaxyElements","ParallaxyDefaultconfig","speed","scale","Parallaxy","constructor","element","config","this","actualTranslation","x","y","actualScale","verfiyConfiguration","style","willChange","push","instance","start","updateConfig","stop","matchingBreakingPoint","breakingPoint","breakPoint","window","matchMedia","matches","updatePosition","cancelAnimationFrame","frameId","reset","transform","isConnected","scaledRect","getBoundingClientRect","translation","transY","translateY","parseFloat","toFixed","transX","translateX","join","requestAnimationFrame","bind","isInverted","inverted","elementCenterPosition","top","height","axes","_a","innerHeight","additionalHeight","overflow","Math","abs","additionalWidth","width","parseBooleanAttribute","str","parseFloatAttributes","nb","isNaN","undefined","findParallaxyElementIndex","findIndex","e","getConfigFromAttributes","attr","dataset","isOnX","prlX","isOnY","prlY","prlSpeedX","prlInvertedX","prlOverflowX","_b","prlSpeedY","prlInvertedY","prlOverflowY","prlScale","prlBreakpoint","prlAxes","ParallaxyAttributesHandler","elementsParallaxy","alreadySetup","isNotParallaxy","document","addEventListener","Array","from","querySelectorAll","MutationObserver","mutations","addedNodes","mutation","type","attributeName","includes","target","cardIndex","addedNode","removedNode","removedNodes","elementIndex","splice","length","observe","documentElement","childList","subtree","attributes"],"mappings":"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"}