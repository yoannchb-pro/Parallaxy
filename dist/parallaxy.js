!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Parallaxy=e()}(this,(function(){"use strict";const t=[],e=.5,i=1.5;class n{constructor(t){t=this.verfiyConfiguration(t),this.config=t,this.$el=this.config.element[0]?this.config.element:[this.config.element];for(const t of this.$el)t.style.willChange="transform";this.mainEvent=null,this.start()}verfiyConfiguration(t){if(this.windowHeight=window.innerHeight,!t.element)throw"[Parallaxy] 'element' must be specified when you create a new Parallaxy object";if(t.x||t.y||(t.y={speed:e}),t.x&&!t.x.speed&&(t.x.speed=e),t.y&&!t.y.speed&&(t.y.speed=e),t.x&&t.x.speed<=0)throw"[Parallaxy] 'speed' need to be bigger than 0";if(t.y&&t.y.speed<=0)throw"[Parallaxy] 'speed' need to be bigger than 0";if(t.x&&t.x.speed>.65)throw"[Parallaxy] 'speed' need to be smaller than 0.65";if(t.y&&t.y.speed>.65)throw"[Parallaxy] 'speed' need to be smaller than 0.65";if(t.scale<1)throw"[Parallaxy] 'scale' need to be bigger than 1 (or equal but with overflow)";return t.scale||(t.scale=i),t.axes||(t.axes=this.windowHeight/2),t}start(){this.mainEvent=this.updatePosition.bind(this);for(const t of this.$el)t.addEventListener("load",(()=>{this.updatePosition()}));document.addEventListener("scroll",this.mainEvent),this.updatePosition()}stop(){document.removeEventListener("scroll",this.mainEvent)}removeElement(e){this.$el.splice(this.$el.indexOf(e),1),t.splice(t.indexOf(e),1),0==this.$el.length&&this.stop()}adddElement(e){this.$el.push(e),t.push(e),this.stop(),this.start()}reset(){for(const t of this.$el)t.style.transform=""}verifyParallaxy(t){const e=t.dataset;return null!=e.prlX||null!=e.prlY||(this.removeElement(t),!1)}matchingBreakingPoint(){const t=this.config.breakPoint;return!!t&&(!!window.matchMedia(t).matches&&(this.reset(),!0))}isIntersectingObserver(t,e=50){const i=this.windowHeight,n=i/2,o={top:t.top,bottom:t.bottom};o.top=o.top-e,o.bottom=o.bottom+e;let s=!1,l=o.top>=-n&&o.top<=i+n,r=o.bottom>=-n&&o.bottom<=i+n;return(l||r||o.top<0&&o.bottom>i)&&(s=!0),!!s}updatePosition(){if(!this.matchingBreakingPoint())for(const t of this.$el){if(!t.isConnected){this.removeElement(t);continue}const e=t.getBoundingClientRect(),i=this.verifyParallaxy(t),n=this.isIntersectingObserver(e);if(i&&n){const i=[];if(i.push(this.scale()),this.config.y){const t=this.translateY(e);i.push(`translateY(${t}px)`)}if(this.config.x){const t=this.translateX(e);i.push(`translateX(${t}px)`)}t.style.transform=i.join(" ")}}}originalRect(t){const e=this.config.scale,i=t.top,n=t.left,o=t.right,s=t.bottom,l=t.width/e,r=t.height/e;return{width:l,height:r,top:i,left:n,right:o,bottom:s,additionalHeight:t.height-r,additionalWidth:t.width-l}}scale(){return`scale(${this.config.scale})`}translateY(t){const e=this.config.y.speed,i=this.config.y.inverted,n=t,o=this.originalRect(t).additionalHeight/2,s=n.top+n.height/2;let l=(this.config.axes-s)*e;i&&(l=-l);const r=o/this.config.scale;return!this.config.y.overflow&&Math.abs(l)>=r&&(l=l<0?-r:r),l}translateX(t){const e=this.config.x.speed,i=this.config.x.inverted,n=t,o=this.originalRect(t).additionalWidth/2,s=n.top+n.height/2;let l=(this.config.axes-s)*e;i&&(l=-l);const r=o/this.config.scale;return!this.config.x.overflow&&Math.abs(l)>=r&&(l=l<0?-r:r),l}}function o(){let i=document.querySelectorAll("[data-prl-y], [data-prl-x]");for(const o of i){if(-1!=t.indexOf(o)||!o.getAttribute)return;t.push(o);const i=o.dataset,s=null!=i.prlX,l=null!=i.prlY;if(s||l){const t={element:o};if(s){const n={},o=i.prlSpeedX;n.speed=parseFloat(o)||e;const s=null!=i.prlInvertedX;n.inverted=s;const l=null!=i.prlOverflowX;n.overflow=l,t.x=n}if(l){const n={},o=i.prlSpeedY;n.speed=parseFloat(o)||e;const s=null!=i.prlInvertedY;n.inverted=s;const l=null!=i.prlOverflowY;n.overflow=l,t.y=n}const r=i.prlScale;null!=r&&(t.scale=parseFloat(r));const a=i.prlBreakpoint;null!=a&&(t.breakPoint=a);const h=i.prlAxes;null!=h&&(t.axes=parseFloat(h)),new n(t)}}}return document.addEventListener("DOMContentLoaded",(function(){new(window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver)((function(t){t&&o()})).observe(window.document.documentElement,{childList:!0,subtree:!0,attributes:!0,removedNodes:!0}),o(document.querySelectorAll("[data-prl-y], [data-prl-x]"))})),n}));
//# sourceMappingURL=parallaxy.js.map
